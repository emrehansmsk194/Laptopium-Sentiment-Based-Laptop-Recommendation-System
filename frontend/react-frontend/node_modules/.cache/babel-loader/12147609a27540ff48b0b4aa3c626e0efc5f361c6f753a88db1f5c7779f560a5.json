{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMREHAN\\\\Desktop\\\\Emrehan Simsek\\\\veri \\xE7ekme selenium\\\\frontend\\\\react-frontend\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n\n  // Mesajı /chat endpoint'ine gönderip cevabı alıyoruz\n  const handleSend = async () => {\n    if (!message.trim()) return; // Boş mesajı yoksay\n    const data = await response.json();\n\n    // Kullanıcının mesajını önce ekranda gösterelim\n    if (data.data && data.data.length > 0) {\n      // Önerilen ürünler var\n      // Mesaj olarak text formatında ekleyebilirsiniz\n      // veya \"structured\" bir şekilde ekrana basabilirsiniz\n      setConversation(prev => [...prev, {\n        sender: 'bot',\n        text: data.message,\n        // \"Önerilen ürünler\"\n        recommendations: data.data // array of laptops\n      }]);\n    } else {\n      // data.data boş olabilir\n      setConversation(prev => [...prev, {\n        sender: 'bot',\n        text: data.message,\n        recommendations: []\n      }]);\n    }\n\n    // Mesaj kutusunu temizle\n    setMessage('');\n  };\n\n  // Enter'a basınca da mesajı göndermek isterseniz handleKeyDown gibi ekleyebilirsiniz\n  // Şimdilik butonla gönderiyoruz\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatWindow,\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.messageRow,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputArea,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        style: styles.sendButton,\n        children: \"G\\xF6nder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Basit stiller\n_s(Chatbot, \"wXnHTkZ/OFFj7TJrDRakOekhQ98=\");\n_c = Chatbot;\nconst styles = {\n  container: {\n    maxWidth: '600px',\n    margin: '2rem auto',\n    fontFamily: 'sans-serif',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    padding: '1rem'\n  },\n  title: {\n    textAlign: 'center'\n  },\n  chatWindow: {\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    minHeight: '300px',\n    padding: '1rem',\n    marginBottom: '1rem',\n    overflowY: 'auto'\n  },\n  messageRow: {\n    marginBottom: '0.5rem'\n  },\n  inputArea: {\n    display: 'flex',\n    gap: '0.5rem'\n  },\n  input: {\n    flex: 1,\n    padding: '0.5rem'\n  },\n  sendButton: {\n    padding: '0.5rem 1rem',\n    backgroundColor: '#ff3e3e',\n    border: 'none',\n    borderRadius: '4px',\n    color: '#fff',\n    cursor: 'pointer'\n  }\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Chatbot","_s","message","setMessage","conversation","setConversation","handleSend","trim","data","response","json","length","prev","sender","text","recommendations","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","chatWindow","map","msg","index","messageRow","inputArea","type","value","onChange","e","target","placeholder","input","onClick","sendButton","_c","maxWidth","margin","fontFamily","border","borderRadius","padding","textAlign","minHeight","marginBottom","overflowY","display","gap","flex","backgroundColor","color","cursor","$RefreshReg$"],"sources":["C:/Users/EMREHAN/Desktop/Emrehan Simsek/veri çekme selenium/frontend/react-frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Chatbot() {\r\n  const [message, setMessage] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n\r\n  // Mesajı /chat endpoint'ine gönderip cevabı alıyoruz\r\n  const handleSend = async () => {\r\n    if (!message.trim()) return; // Boş mesajı yoksay\r\n    const data = await response.json();\r\n\r\n    // Kullanıcının mesajını önce ekranda gösterelim\r\n    if (data.data && data.data.length > 0) {\r\n        // Önerilen ürünler var\r\n        // Mesaj olarak text formatında ekleyebilirsiniz\r\n        // veya \"structured\" bir şekilde ekrana basabilirsiniz\r\n        setConversation((prev) => [\r\n          ...prev,\r\n          {\r\n            sender: 'bot',\r\n            text: data.message, // \"Önerilen ürünler\"\r\n            recommendations: data.data // array of laptops\r\n          }\r\n        ]);\r\n      } else {\r\n        // data.data boş olabilir\r\n        setConversation((prev) => [\r\n          ...prev,\r\n          { sender: 'bot', text: data.message, recommendations: [] }\r\n        ]);\r\n    }\r\n\r\n    // Mesaj kutusunu temizle\r\n    setMessage('');\r\n  };\r\n\r\n  // Enter'a basınca da mesajı göndermek isterseniz handleKeyDown gibi ekleyebilirsiniz\r\n  // Şimdilik butonla gönderiyoruz\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Chatbot</h2>\r\n\r\n      {/* Mesajların göründüğü alan */}\r\n      <div style={styles.chatWindow}>\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} style={styles.messageRow}>\r\n            <strong>{msg.sender === 'user' ? 'You' : 'Bot'}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Mesaj yazma alanı */}\r\n      <div style={styles.inputArea}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Mesajınızı yazın...\"\r\n          style={styles.input}\r\n        />\r\n        <button onClick={handleSend} style={styles.sendButton}>\r\n          Gönder\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Basit stiller\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '600px',\r\n    margin: '2rem auto',\r\n    fontFamily: 'sans-serif',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    padding: '1rem'\r\n  },\r\n  title: {\r\n    textAlign: 'center'\r\n  },\r\n  chatWindow: {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    minHeight: '300px',\r\n    padding: '1rem',\r\n    marginBottom: '1rem',\r\n    overflowY: 'auto'\r\n  },\r\n  messageRow: {\r\n    marginBottom: '0.5rem'\r\n  },\r\n  inputArea: {\r\n    display: 'flex',\r\n    gap: '0.5rem'\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '0.5rem'\r\n  },\r\n  sendButton: {\r\n    padding: '0.5rem 1rem',\r\n    backgroundColor: '#ff3e3e',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n    cursor: 'pointer'\r\n  }\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}